spring.application.name=class_manager_backend

# Server configuration
server.port=${SERVER_PORT:8080}
spring.profiles.active=${SPRING_PROFILE_ACTIVE:dev}

# Logging
logging.level.root=${LOGGING_LEVEL_ROOT:INFO}

# JWT Token Keys to encrypt/decrypt
jwt.public.key=classpath:app.pub
jwt.private.key=classpath:app.key

# Database
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/class_manager}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate
spring.jpa.hibernate.ddl-auto=${HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.show_sql=${HIBERNATE_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

# Email configuration
spring.mail.host=${EMAIL_HOST:sandbox.smtp.mailtrap.io}
spring.mail.port=${EMAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME:d7d0ac2b7419a3}
spring.mail.password=${EMAIL_PASSWORD:e131afb3f9d4a4}
spring.mail.properties.mail.smtp.auth=${EMAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${EMAIL_SMTP_STARTTLS_ENABLE:true}

# First Admin config
generate.admin.user=${GENERATE_ADMIN_USER:true}
admin.config.password=${ADMIN_CONFIG_PASSWORD:admin}
admin.config.email=${ADMIN_CONFIG_EMAIL:admin@gmail.com}
admin.config.name=${ADMIN_CONFIG_NAME:Admin}
admin.config.surname=${ADMIN_CONFIG_SURNAME:Istrator}

# API Configuration
api.issuer=${API_ISSUER:http://localhost:8080}

# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:5173}
cors.allowed.methods=${CORS_ALLOWED_METHODS:GET,POST,PUT,PATCH,DELETE}
cors.allowed.headers=${CORS_ALLOWED_HEADERS:Content-Type,Authorization,X-Requested-With,Accept,Origin}

# Swagger configuration
swagger.tryitout.enabled=${SWAGGER_TRYITOUT_ENABLED:true}

# Other configurations
front-end.url=${FRONT_END_URL:http://localhost:3000}
